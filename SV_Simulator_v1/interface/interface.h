#pragma once
#include "..\inGame\Game.h"
#include "pch.h"

#define MINCYCLE 500
#define MAXCYCLE 5000

#define SV_SIMULATOR_API __declspec(dllexport)

enum class SimState {
	Disable = 10, WaitPlay, InitThread, Work, WaitEnd, EndThread, Pause
};

enum class LogType {
	Msg, Func
};
// Interface Method 선언****************************************************************

/// <summary>
/// 게임 시작 직후 반드시 호출. 게임 중 단 한번만 호출 가능. flag 값들 초기화. game 생성 초기화
/// </summary>
/// <param name="_cycle"> oneday의 호출 주기 (ms 단위), 500이상 값만 유효함. </param>
/// <param name="_debugMode">Debug 모드 (0 ~ 2) </param>
/// <returns></returns>
extern "C" SV_SIMULATOR_API int Inter_InitGame(long long _cycle, int _debugMode);

/// <summary>
/// thread_exit = false로 초기화, thread 생성 및 detach 
/// </summary>
/// <returns></returns>
extern "C" SV_SIMULATOR_API int Inter_PlayGame();

/// <summary>
/// 게임 종료를 위해서 반드시 호출. 쓰레드 종료, flag 값들 초기화, Game 해제 및 삭제
/// </summary>
/// <returns></returns>
extern "C" SV_SIMULATOR_API int Inter_EndGame();
extern "C" SV_SIMULATOR_API long long Inter_GetData();
extern "C" SV_SIMULATOR_API int Inter_Pause();
extern "C" SV_SIMULATOR_API int Inter_Resume();
extern "C" SV_SIMULATOR_API int Inter_EnforcePolicy(int _countryCode, int _policyCode);
//***************************************************************************************


// only Dll Method (DLL 내부에서만 작동하는 함수)****
namespace SV_Sim {
	int Run();
	int Work();
	int Pause();
	int Wait(time_t);
	void DebugLog(const char*, LogType);
	void ErrorLog(const char*);



	Game* game = nullptr;

	// oneDay의 호출 주기 ms 단위, MINCYCLE 이상의 값만 입력됨.
	static time_t oneDayCycle;
	static SimState simState = SimState::Disable;
	int debugMode;
}
//************************************************


// type of Debug Log


/// <summary>
/// true: thread 종료 / InitGame()호출시 false / PlayGame()호출시 false / EndGame() 호출 시 true
/// </summary>
//bool thread_exit = false;

/// <summary>
/// true: thread 실행 중 / Run() 도입시 true, 반환 전 false 
/// </summary>
//bool thread_run = false;

/// <summary>
/// true: 초기화 실행된 경우 / false의 경우 어떠한 함수도 사용할 수 없다. / EndGame() 호출 시 false
/// </summary>
//bool isInit = false;

/// <summary>
/// true: Debug용 Log 출력 / initGame의 매개변수에 종속
/// </summary>
//bool lDebugMode = false;

/// <summary>
/// true: Debug용 함수 이름 출력 / initGame의 매개변수에 종속
/// </summary>
//bool fDebugMode = false;



// game 포인터 선언
